{"version":3,"file":"next-sanity.cjs.production.min.js","sources":["../src/aborter.ts","../src/currentUser.ts","../src/useSubscription.ts","../src/client.ts"],"sourcesContent":["export interface Aborter {\n  abort(): void\n  signal: AbortSignal\n}\n\nclass MockAbortController {\n  _signal = {aborted: false}\n  get signal() {\n    return this._signal as AbortSignal\n  }\n  abort() {\n    this._signal.aborted = true\n  }\n}\n\nexport function getAborter(): Aborter {\n  return typeof AbortController === 'undefined'\n    ? new MockAbortController()\n    : new AbortController()\n}\n","import {useEffect, useState} from 'react'\nimport {CurrentUser} from './types'\nimport {getAborter, Aborter} from './aborter'\n\nexport function createCurrentUserHook({projectId}: {projectId: string; dataset?: string}) {\n  return () => useCurrentUser(projectId)\n}\n\nexport function getCurrentUser(projectId: string, abort: Aborter): Promise<CurrentUser | null> {\n  return fetch(`https://${projectId}.api.sanity.io/v1/users/me`, {\n    credentials: 'include',\n    signal: abort.signal,\n  })\n    .then((res) => res.json())\n    .then((res) => (res?.id ? res : null))\n}\n\nfunction useCurrentUser(projectId: string) {\n  const [data, setUser] = useState<CurrentUser | null>()\n  const [error, setError] = useState<Error>()\n\n  useEffect(() => {\n    const aborter = getAborter()\n    getCurrentUser(projectId, aborter)\n      .then(setUser)\n      .catch((err: Error) => err.name !== 'AbortError' && setError(err))\n\n    return () => {\n      aborter.abort()\n    }\n  }, [projectId])\n\n  return {data, error, loading: data !== null || !error}\n}\n","import {useState, useEffect, useMemo} from 'react'\nimport {GroqStore, Subscription} from '@sanity/groq-store'\nimport {ProjectConfig} from './types'\nimport {getCurrentUser} from './currentUser'\nimport {getAborter, Aborter} from './aborter'\n\nconst EMPTY_PARAMS = {}\n\nexport type Params = Record<string, unknown>\nexport interface SubscriptionOptions<R = any> {\n  enabled?: boolean\n  params?: Params\n  initialData?: R\n}\n\nexport function createPreviewSubscriptionHook({\n  projectId,\n  dataset,\n  documentLimit = 3000,\n}: ProjectConfig & {documentLimit?: number}) {\n  // Only construct/setup the store when `getStore()` is called\n  let store: Promise<GroqStore>\n\n  return function usePreviewSubscription<R = any>(\n    query: string,\n    options: SubscriptionOptions<R> = {}\n  ) {\n    const {params = EMPTY_PARAMS, initialData, enabled} = options\n    return useQuerySubscription<R>({\n      getStore,\n      projectId,\n      query,\n      params,\n      initialData: initialData as any,\n      enabled: enabled ? typeof window !== 'undefined' : false,\n    })\n  }\n\n  function getStore(abort: Aborter) {\n    if (!store) {\n      store = import('@sanity/groq-store').then(({groqStore}) => {\n        // Skip creating the groq store if we've been unmounted to save memory and reduce gc pressure\n        if (abort.signal.aborted) {\n          const error = new Error('Cancelling groq store creation')\n          // This ensures we can skip it in the catch block same way\n          error.name = 'AbortError'\n          return Promise.reject(error)\n        }\n\n        return groqStore({\n          projectId,\n          dataset,\n          documentLimit,\n          listen: true,\n          overlayDrafts: true,\n          subscriptionThrottleMs: 10,\n        })\n      })\n    }\n    return store\n  }\n}\n\nfunction useQuerySubscription<R = any>(options: {\n  getStore: (abort: Aborter) => Promise<GroqStore>\n  projectId: string\n  query: string\n  params: Params\n  initialData: R\n  enabled: boolean\n}) {\n  const {getStore, projectId, query, initialData, enabled = false} = options\n  const [error, setError] = useState<Error>()\n  const [loading, setLoading] = useState(false)\n  const [data, setData] = useState<R>()\n  const params = useParams(options.params)\n\n  // Use \"deep\" dependency comparison because params are often not _referentially_ equal,\n  // but contains the same shallow properties, eg `{\"slug\": \"some-slug\"}`\n  useEffect(() => {\n    if (!enabled) {\n      return\n    }\n\n    setLoading(true)\n\n    const aborter = getAborter()\n    let subscription: Subscription | undefined\n    getCurrentUser(projectId, aborter)\n      .then((user) => {\n        if (user) {\n          return\n        }\n\n        // eslint-disable-next-line no-console\n        console.warn('Not authenticated - preview not available')\n        throw new Error('Not authenticated - preview not available')\n      })\n      .then(() => getStore(aborter))\n      .then((store) => {\n        subscription = store.subscribe(query, params, (err, result) => {\n          if (err) {\n            setError(err)\n          } else {\n            setData(result)\n          }\n        })\n      })\n      .catch((err: Error) => (err.name === 'AbortError' ? null : setError(err)))\n      .finally(() => setLoading(false))\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      if (subscription) {\n        subscription.unsubscribe()\n      }\n\n      aborter.abort()\n    }\n  }, [getStore, query, params, enabled])\n\n  return {\n    data: typeof data === 'undefined' ? initialData : data,\n    loading,\n    error,\n  }\n}\n\n// Return params that are stable with deep equal as long as the key order is the same\nfunction useParams(params: Params): Params {\n  const stringifiedParams = useMemo(() => JSON.stringify(params), [params])\n  return useMemo(() => JSON.parse(stringifiedParams), [stringifiedParams])\n}\n","import sanityClient from '@sanity/client'\nimport {ClientConfig} from './types'\n\nexport function createClient(config: ClientConfig) {\n  return sanityClient(config)\n}\n"],"names":["MockAbortController","aborted","abort","_signal","this","getAborter","AbortController","getCurrentUser","projectId","fetch","credentials","signal","then","res","json","id","EMPTY_PARAMS","config","sanityClient","useState","data","setUser","error","setError","useEffect","aborter","catch","err","name","loading","useCurrentUser","store","dataset","documentLimit","query","options","params","getStore","initialData","enabled","setLoading","setData","stringifiedParams","useMemo","JSON","stringify","parse","useParams","subscription","user","console","warn","Error","subscribe","result","finally","unsubscribe","useQuerySubscription","window","groqStore","Promise","reject","listen","overlayDrafts","subscriptionThrottleMs"],"mappings":"qNAKMA,uCACM,CAACC,SAAS,8BAIpBC,MAAA,gBACOC,QAAQF,SAAU,6BAJzB,kBACSG,KAAKD,yPAOhB,SAAgBE,UACoB,oBAApBC,gBACV,IAAIN,EACJ,IAAIM,yBCVMC,EAAeC,EAAmBN,UACzCO,iBAAiBD,+BAAuC,CAC7DE,YAAa,UACbC,OAAQT,EAAMS,SAEbC,MAAK,SAACC,UAAQA,EAAIC,UAClBF,MAAK,SAACC,gBAASA,GAAAA,EAAKE,GAAKF,EAAM,QCRpC,IAAMG,EAAe,gDCHQC,UACpBC,EAAaD,kDFAiBT,IAAAA,iBAC9B,kBAYT,SAAwBA,SACEW,aAAjBC,OAAMC,SACaF,aAAnBG,OAAOC,cAEdC,aAAU,eACFC,EAAUpB,WAChBE,EAAeC,EAAWiB,GACvBb,KAAKS,GACLK,OAAM,SAACC,SAA4B,eAAbA,EAAIC,MAAyBL,EAASI,MAExD,WACLF,EAAQvB,WAET,CAACM,IAEG,CAACY,KAAAA,EAAME,MAAAA,EAAOO,QAAkB,OAATT,IAAkBE,GA3BnCQ,CAAetB,2DCgBxBuB,EALJvB,IAAAA,UACAwB,IAAAA,YACAC,cAAAA,aAAgB,aAKT,SACLC,EACAC,YAAAA,IAAAA,EAAkC,UAEoBA,EAA/CC,cAoCX,SAAuCD,OAQ9BE,EAA4DF,EAA5DE,SAAU7B,EAAkD2B,EAAlD3B,UAAW0B,EAAuCC,EAAvCD,MAAOI,EAAgCH,EAAhCG,cAAgCH,EAAnBI,QAAAA,kBACtBpB,aAAnBG,OAAOC,SACgBJ,YAAS,GAAhCU,OAASW,SACQrB,aAAjBC,OAAMqB,OACPL,EAsDR,SAAmBA,OACXM,EAAoBC,WAAQ,kBAAMC,KAAKC,UAAUT,KAAS,CAACA,WAC1DO,WAAQ,kBAAMC,KAAKE,MAAMJ,KAAoB,CAACA,IAxDtCK,CAAUZ,EAAQC,eAIjCZ,aAAU,cACHe,GAILC,GAAW,OAGPQ,EADEvB,EAAUpB,WAEhBE,EAAeC,EAAWiB,GACvBb,MAAK,SAACqC,OACDA,QAKJC,QAAQC,KAAK,6CACP,IAAIC,MAAM,gDAEjBxC,MAAK,kBAAMyB,EAASZ,MACpBb,MAAK,SAACmB,GACLiB,EAAejB,EAAMsB,UAAUnB,EAAOE,GAAQ,SAACT,EAAK2B,GAC9C3B,EACFJ,EAASI,GAETc,EAAQa,SAIb5B,OAAM,SAACC,SAA6B,eAAbA,EAAIC,KAAwB,KAAOL,EAASI,MACnE4B,SAAQ,kBAAMf,GAAW,MAGrB,WACDQ,GACFA,EAAaQ,cAGf/B,EAAQvB,YAET,CAACmC,EAAUH,EAAOE,EAAQG,IAEtB,CACLnB,UAAsB,IAATA,EAAuBkB,EAAclB,EAClDS,QAAAA,EACAP,MAAAA,GAhGOmC,CAAwB,CAC7BpB,SAAAA,EACA7B,UAAAA,EACA0B,MAAAA,EACAE,kBALcpB,IAMdsB,YANoDH,EAAxBG,YAO5BC,UAPoDJ,EAAXI,SAOJ,oBAAXmB,mBAIrBrB,EAASnC,UACX6B,IACHA,EAAQ,8QAAO,2BAAsBnB,MAAK,gBAAE+C,IAAAA,aAEtCzD,EAAMS,OAAOV,QAAS,KAClBqB,EAAQ,IAAI8B,MAAM,yCAExB9B,EAAMM,KAAO,aACNgC,QAAQC,OAAOvC,UAGjBqC,EAAU,CACfnD,UAAAA,EACAwB,QAAAA,EACAC,cAAAA,EACA6B,QAAQ,EACRC,eAAe,EACfC,uBAAwB,SAIvBjC"}